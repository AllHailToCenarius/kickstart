extends ../../layout

mixin colors 
  p
    span.tooltip_trigger
      a(href="#") Hover
      span.tooltip I'm a tooltip!
    | &nbsp;
    span.tooltip_trigger
      a(href="#") over
      span.tooltip.tooltip-red I'm a tooltip!
    | &nbsp;
    span.tooltip_trigger
      a(href="#") any
      span.tooltip.tooltip-orange I'm a tooltip!
    | &nbsp;
    span.tooltip_trigger
      a(href="#") of
      span.tooltip.tooltip-yellow I'm a tooltip!
    | &nbsp;
    span.tooltip_trigger
      a(href="#") these
      span.tooltip.tooltip-green I'm a tooltip!
    | &nbsp;
    span.tooltip_trigger
      a(href="#") words
      span.tooltip.tooltip-blue I'm a tooltip!

block hero-title
  h1 Tooltips

block hero-example
  +colors

block basic
  :markdown
    For performance reasons, tooltips work mainly through CSS, using JavaScript
    mainly for making minor on-screen adjustments.

    To create a tooltip, you must first define what triggers that tooltip when
    hovered.

    <span class="label label-info">Important</span> Use span elements for 
    `.tooltip` and `.tooltip_trigger` when adding tooltips in text.

  .ifnot-semantic
    :markdown
      <span>

          <div class="tooltip_trigger">
            <button class="button">Close</button>
          </div>

  .if-semantic
    :markdown
      <span>

          <div class="decision">
            <button class="close">Close</button>
          </div>

          .decision {
            @include tooltip_trigger();
          }
          .close {
            @include button();
          }

  :markdown 
    When hovering over `.tooltip_trigger`, any `.tooltip`
    classes contained inside will become visible.

  :markdown
    <span>

  .ifnot-semantic
    :markdown
      <span>

          <div class="tooltip_trigger">
            <button class="button">Close</button>
            <span class="tooltip">Make sure you've finished your application!</span>
          </div>

  .if-semantic
    :markdown
      <span>

          <div class="decision">
            <button class="button">Close</button>
            <span class="tooltip">Make sure you've finished your application!</span>
          </div>

          .decision {
            @include tooltip_trigger();
          }
          .close {
            @include button();
          }

      Note there is no special mixin for `.tooltip` as the content is so specific
      to being a tooltip, the class should be semantic already.

block variations
  :markdown
    ## Coloring

  +colors

  .if-semantic
    :markdown 
      Tooltips use their background color for more properties than just CSS
      background color. For this reason, it's best to feed this color into
      the mixin for `tooltip_trigger()`.

          .tooltip_trigger {
            @include tooltip_trigger($yellow);
          }

      However, if you need different colored tooltips in a single trigger
      area, you will need to define this color for two places:

          .tooltip_trigger {
            
            .tooltip1 {
              background-color: $green;
              &:after {
                border-top-color: $green;
              }
            }

            .tooltip1 {
              background-color: $yellow;
              &:after {
                border-top-color: $yellow;
              }
            }

          }

  .ifnot-semantic
    :markdown
      To choose a color, simply add `.tooltip-[color]` with the `.tooltip` class.

          <span class="tooltip tooltip-yellow">Click for more information</span>

    +available-colors

  :markdown
    ## Positioning

    Tooltips can be positioned to the top, left, right, or bottom.

  .tooltip_trigger
    button.button Top
    span.tooltip I'm on top
    | &nbsp;
  .tooltip_trigger
    button.button Left
    span.tooltip.tooltip-left I'm on the left
    | &nbsp;
  .tooltip_trigger
    button.button Right
    span.tooltip.tooltip-right I'm on the right
    | &nbsp;
  .tooltip_trigger
    button.button Bottom
    span.tooltip.tooltip-bottom I'm on the bottom

  :markdown
    By default, tooltips will be positioned "top". To position left, right, or bottom,
    add this position as a `.tooltip-[position]` class.

        <div class="tooltip_trigger">
          <p>Left</p>
          <span class="tooltip tooltip-left">I'm on the left.
        </div>

  .if-semantic
    :markdown
      This is applied directly to the tooltip instead of the trigger to
      allow for the possibility of multiple tooltips with different positions
      in a single trigger area.
