extends ../fullpage-layout

block hero-title
  h1 Layout

block fullPane
  :markdown
    # Fixed, Fluid, and Fixed-fluid

    Before you start adding components to your page, it's best to decide if
    you want a fixed, fluid, or fixed-fluid layout.

    ## Fixed layout

    A fixed layout simply limits the width of the layout to a certain amount.

  iframe.animation(src="/iframes/layout-fixed/fixed.html")

  :markdown
    Create a container around your content <span class="if-semantic">and use the mixin
    <code>container($fixed: true)</code></span><span class="ifnot-semantic">and
    use the <code>.container-fixed</code> class.

    The default max-width is about 768px, however, you can define your own by adding
    a `max-width` property.

  .if-semantic
    :markdown
      <span>

          <div class="container">
            <h1>Hello world</h1>
          </div>

          .container {
            @include container($fixed: true);
            max-width: 700px;
          }

  .ifnot-semantic
    :markdown
      <span>

          <div class="container fixed">
            <h1>Hello world</h1>
          </div>

  :markdown
    # HTML styles

    Several styles are applied at the HTML level for convenience throughout
    the DOM.

    A default font-size of 18px (varies depending on the theme) is set. This
    should really be the only place where `px` are used to define font-size. 
    Elsewhere, the `rem` unit is used, which is relative to the font-size in
    the HTML document.

    On supporting browsers, this font-size will scale with the width of the 
    screen. See [Typography](/docs/3.x/ui/typography/) for more information
    on responsive text.

    # Root Element

    The concept of the root element in Kickstart is what would be
    left if we combined the styling from all elements, only leaving
    the things all of them had in common.

    The end result of this doesn't fit the definition perfectly, but
    it comes close and gives us a useful tool for sharing an aesthetic.

    In the default theme of Kickstart, the root-element has a specific
    top and bottom padding, border radius, and font rules.

    Here it is with some shading for clarity.

  .example
    .root-element(style="background:rgba(0, 0, 0, 0.2)") foo

  :markdown
    This very simple piece of UI can be shared by many components. It
    also gets us closer to a guarantee that any variety of many different
    elements will fit nicely together.

    ## Mixins

    This is also how Kickstart defines its mixins and parameters. 
    The goal of defining this is to maintain consistency across mixins as
    much as possible.

        @mixin root-element($background-color, $color)

    Some properties, like `$color` seem to stand for CSS
    properties. This is why the mixin uses those names instead of
    `$foreground-color`. However, there are often other accessory
    styles that come in with it. (For example, the navbar uses lighter
    text when it's given a darker background.)
