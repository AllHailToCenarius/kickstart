extends ../../layout

block hero-title
  h1 Typography

block basic
  p By default, the standard set of typography tags will look like this:

  .example
    h1 Heading 1
    h2 Heading 2
    h3 Heading 3
    h4 Heading 4
    h5 Heading 5
    h6 Heading 6
    p Lorem ipsum dolor sit amet, consectetur adipisicing elit, sed do eiusmod tempor incididunt ut labore et dolore magna aliqua. Ut enim ad minim veniam, quis nostrud exercitation ullamco laboris nisi ut aliquip ex ea commodo consequat. Duis aute irure dolor in reprehenderit in voluptate velit esse cillum dolore eu fugiat nulla pariatur. Excepteur sint occaecat cupidatat non proident, sunt in culpa qui officia deserunt mollit anim id est laborum.
    p
      em Emphasized
    p
      strong Strong

block variations
  h2 Responsive
  p Font sizes and line-heights are set with responsive sizing based on the viewport width. Try changing the size of this screen or view on a different-sized screen for an example.

  h2 Content-optimized
  p.if-semantic 
    | To use content-optimized default paragraph text, simply pass in&nbsp;
    code true
    |  to&nbsp;
    code p()
  p.if-semantic Direct descendants will also acquire these styles, so this can be applied to a parent container as well.
  p.ifnot-semantic 
    | Classes with&nbsp;
    code .semantic
    |  and their direct descendants will be optimized for content.


  .example
    p.readable Lorem ipsum dolor sit amet, consectetur adipisicing elit, sed do eiusmod tempor incididunt ut labore et dolore magna aliqua. Ut enim ad minim veniam, quis nostrud exercitation ullamco laboris nisi ut aliquip ex ea commodo consequat. Duis aute irure dolor in reprehenderit in voluptate velit esse cillum dolore eu fugiat nulla pariatur. Excepteur sint occaecat cupidatat non proident, sunt in culpa qui officia deserunt mollit anim id est laborum.
    p.readable Lorem ipsum dolor sit amet, consectetur adipisicing elit, sed do eiusmod tempor incididunt ut labore et dolore magna aliqua. Ut enim ad minim veniam, quis nostrud exercitation ullamco laboris nisi ut aliquip ex ea commodo consequat. Duis aute irure dolor in reprehenderit in voluptate velit esse cillum dolore eu fugiat nulla pariatur. Excepteur sint occaecat cupidatat non proident, sunt in culpa qui officia deserunt mollit anim id est laborum.

    pre.if-semantic
      code p.readable {
        |   @include p(true);
        | }

    .ifnot-semantic
      :markdown
        <span>

            <p class="readable">Lorem...</p>

        or

            <div class="readable">
              <p>Lorem...</p>
            </div>

  h2 Headers
  p Create spacious, dominating header lines

  .example
    header.page-heading
      h1 How to cook a pie
    p The first step to cooking a pie is to choose a fancy tin.

    :markdown
      ### Code

          <header class="page-heading">
            <h1>How to cook a pie</h1>
          </header>
          <p>The first step to cooking a pie is to choose a fancy pie tin.</p>

          .page-heading {
            @include page-heading();
          }


  :markdown
    ## Lists
    
    Sometimes bullets are annoying. Kickstart provides a couple ways of displaying unstyled lists:

    ### Unstyled vertical

  ul.unstyled
    li Apples
    li Bread
    li Nuts
    li Sugar
    li Flour

  :markdown

    ### Unstyled horizontal

  ul.unstyled.horizontal
    li Apples
    li Bread
    li Nuts
    li Sugar
    li Flour

  h2 Decoupled
  p While different sizes of text can be selected with the h1-h6 tags, this fringes on using HTML for styling. The level of a heading should dictate its hierarchy, but not necessarily its size.
  p For this reason, a set of heading <span class="ifnot-semantic">classes</span><span class="if-semantic">mixins</span> are available that can be added to the heading tags. Notice in each example below, an h1 tag is used, although the sizes vary.

  table
    thead
      tr
        th.if-semantic Mixin name
        th Implementation
        th Sample
    tbody
      - for size in ['xxl', 'xl', 'lg', 'md', 'rg', 'sm', 'xs', 'xxs']
        tr
          td.if-semantic
            code #{size}-heading()
          td
            pre.if-semantic
              code h1.#{size} {
                |   @include #{size}-heading();
                | }
                | &nbsp;
                | &lt;h1 class="#{size}"&gt;Hello World&lt;/h1&gt;
            pre.ifnot-semantic
              code &lt;h1 class="#{size}"&gt;Hello World&lt;/h1&gt;
          td
            h1(class="#{size}") Hello World

  :markdown
    ## Heros

    Heros are large containers for showcasing content. Headings are automatically bumped up
    a notch and elements tend to be centered.

  .hero
    h1 Thanks for visiting.

    .thumbnail-content(style="width: 80%")
      img(src="/img/mountains.png" style="width: 150px;height: 150px;")
      article
        h6 Don't to forget to check out the slopes
        p You won't regret it.

  :markdown
    <span>

        <div class="hero">
          <h1>Thanks for visiting</h1>

          <div class="thumbnail-content">
            <img src="mountains.png" style="width: 150px; height: 150px;" />
            <article>
              <h2>Don't forget to check out the slopes</h2>
              <p>You won't regret it</p>
            </article>
          </div>
        </div>

  .if-semantic
    :markdown
      <span>
       
           .hero {
             @include hero();
           }
