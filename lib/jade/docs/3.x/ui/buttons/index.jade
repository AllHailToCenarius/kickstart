extends ../../layout

block hero-title
  h1 Buttons

block hero-example
  div
    .button Default
    | &nbsp;
    .button.button-clear Clear
    | &nbsp;
    .button.button-red Red
    | &nbsp;
    .button.button-orange Orange
    | &nbsp;
    .button.button-yellow Yellow
    | &nbsp;
    .button.button-green Green
    | &nbsp;
    .button.button-blue Blue
    | &nbsp;
    .button.button-violet Violet

block meta
  table
    tr.if-semantic
      td Mixin
      td
        code button()

block toc-variations


block basic

  button.button Sign Up
  | &nbsp;
  a.button(href="#") Sign Up
  | &nbsp;
  input.button(type="submit" value="Sign Up")

  .if-semantic
    :markdown
      <span>

          <button class="signup">Sign up</button>
          <a href="#" class="signup">Sign up</a>
          <input type="submit" class="signup" value="Sign up" />

          .signup {
            @include button();
          }

  .ifnot-semantic
    :markdown
      <span>

          <button class="button">Sign up</button>
          <a href="#" class="button">Sign up</a>
          <input type="submit" class="button" value="Sign up" />

block variations
  .ifnot-semantic
    :markdown
      For colored buttons, simply add the `.button-` class of one of the primary colors
      to the `.button` class.

    button.button-green Send
    | &nbsp;
    button.button-red Delete
    | &nbsp;
    button.button-blue Info
    | &nbsp;
    button.button Cancel

    :markdown
      <span>

          <button class="button button-green">Send</button>
          <button class="button button-red">Delete</button>
          <button class="button button-blue">Info</button>
          <button class="button">Cancel</button>

  .if-semantic

    :markdown
      For colored buttons, simply pass in a color to `button()`.

          <button class="send">Send</button>
          <button class="delete">Delete</button>
          <button class="info">Info</button>
          <button class="cancel">Cancel</button>

    :markdown
      <span>

          .send {
            @include button($green);
          }
          .delete {
            @include button($red);
          }
          .info {
            @include button(#6495ed);
          }
          .cancel {
            @include button();
          }

block granular
  :markdown
    ## Dropdown button

    Dropdown buttons are simply collapsible lists that look like buttons.

  .alert.alert-info
    h1 Use the button element.
    p Unlike other uses, this can only be applied to the HTML <code>button</code> element.


  button
    | Add photo
    ul
      li
        a(href="#") Upload
      li
        a(href="#") Choose from library
      li
        a(href="#") Take a picture

  :markdown
    <span>

        <button class="button">
          Add photo
          <ul>
            <li>
              <a href="#">Upload</a>
            </li>
            <li>
              <a href="#">Choose from library</a>
            </li>
            <li>
              <a href="#">Take a picture</a>
            </li>
          </ul>
        </button>

  .if-semantic
    :markdown
      <span>

          .button {
            @include button();
          }

  :markdown
    ## Button with dropdown

    This is a bit different from the above only because the button stil
    exists with the dropdown instead of as one.

  button.button Upload
  ul.button-dropdown
    li
      a(href="#") Choose from library
    li
      a(href="#") Take a picture

  :markdown
    <span>

        <button class="button" role="button">
          Upload
        </button>
        <ul class="button-dropdown">
          <li>
            <a href="#">Choose from library</a>
          </li>
          <li>
            <a href="#">Take a picture</a>
          </li>
        </ul>

  p 
    span.label.label-info Important!
    |  The <code>.button-dropdown</code> class is a required class

  .if-semantic
    :markdown
      <span>

          .button {
            @include button();
          }

  :markdown
    ## Groups

  ul.button-group
    li
      a(href="#") Create
    li
      a(href="#") Read
    li
      a(href="#") Update
    li
      a(href="#") Delete

  :markdown
    <span>

        <ul class="button-group">
          <li>
            <a href="#">Create</a>
          </li>
          <li>
            <a href="#">Read</a>
          </li>
          <li>
            <a href="#">Update</a>
          </li>
          <li>
            <a href="#">Delete</a>
          </li>
        </ul>

  .if-semantic
    :markdown
      <span>

          .button-group {
            @include button-group();
          }

  :markdown
    ## Sizes

  .row
    .col-4
      ul.list-unstyled
        li
          button.button.button-large Large
        li
          button.button Regular
        li
          button.button.button-small Small

    .col-4
      ul.list-unstyled
        li
          button.button.button-large Large
          ul.button-dropdown
            li
              a(href="#") Option 1
            li
              a(href="#") Option 2

        li
          button.button.with-submenu Regular
          ul.button-dropdown
            li
              a(href="#") Option 1
            li
              a(href="#") Option 2

        li
          button.button.button.button-small Small
          ul.button-dropdown
            li
              a(href="#") Option 1
            li
              a(href="#") Option 2

    .col-4
      ul.list-unstyled
        li
          button.button.button-large
            | Large
            ul.button-dropdown
              li
                a(href="#") Option 1
              li
                a(href="#") Option 2

        li
          button.button
            | Regular
            ul
              li
                a(href="#") Option 1
              li
                a(href="#") Option 2

        li
          button.button.button-small
            | Small
            ul
              li
                a(href="#") Option 1
              li
                a(href="#") Option 2
