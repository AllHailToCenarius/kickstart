extends ../../_layout

block hero-title
  h1 Notifications

block variables
  - var showFooter = false
  - var title = "Notifications" 

block documents
  .document 
    article.article 
      :markdown
        Notifications give your site an application-like feel by providing dynamic
        messaging components that work in real time and organize themselves.
      a.button.blue#example-showStatus Show Status
      | &nbsp;
      a.button.blue#example-showGrowl Show Growl

    article.code

block basic
  :markdown

    ## Statuses

    Statuses are once-only notifications best for streaming system information.
    Once-only means each new status replaces its previous one and only one shows
    at a time. See [throttling](/docs/3.x/functions/throttling/) for more
    information

        k$.status({
          text: 'Saved successfully',
          type: 'status-green'
        })

    ## Growls

    Growls are stackable, right-aligned notifications. Unlike statuses, creating
    one growl does not replace the existing one. Each Growl has its own delay
    and styling properties. Unlike statuses, they are also dismissable like a
    modal.

        // Defaults are shown

        k$.growl({
          title: 'Greetings'
        })

block variations
  :markdown
    ## Statuses

    Statuses take additional parameters to allow you to hold on to them for
    longer, even forever, and style them appropriately.

        // Defaults are shown

        k$.status({
          text: 'Saved successfully', // No default
          delay: 2000, // Optional, 0 = forever
          type: 'status-yellow', // Optional, yellow is default
          id: '' // Optional, for targeting with JavaScript
        })

  +available-colors('status')

  :markdown 
    ## Growls

    Growls have similar flexibility.

        // Defaults are shown

        k$.growl({
          title: 'Greetings',
          text: 'We're happy to inform you your document was saved.', // Optional
          delay: 2000, // Optional, 0 = forever
          type: 'alert-warn', // Optional
          id: 'token' // Optional
        })

    Growls are also fed through `k$.buffer` as a UX concern to prevent
    overloading the screen with messages. By default, only one growl can show per
    half second. Subsequent growls will be buffered and shown after others have
    been dismissed. See [buffers](/docs/#{docsVersion}/throttling) for more
    information.

  .if-semantic
    :markdown
      Growls reuse the styles for alerts. Because you're using this library
      semantically, you'll need to assign the alert styles to the `.growl` class.

          .growl {
            @include alert();
          }

      To use different stylings, just pass in a class name to the `type` property.
      By default, this is appended as a class on `.growl`

          k$.growl({
            title: 'It worked!',
            type: 'success'
          })

          .growl {
            @include alert();

            &.success {
              background: map-get($colors, green);
            }
          }
